{
	"version": 3,
	"file": "all.css",
	"sources": [
		"all.sass",
		"assets/css/1-tools/_-tools-dir.sass",
		"assets/css/1-tools/bourbon/_bourbon.scss",
		"assets/css/1-tools/bourbon/settings/_prefixer.scss",
		"assets/css/1-tools/bourbon/settings/_px-to-em.scss",
		"assets/css/1-tools/bourbon/helpers/_convert-units.scss",
		"assets/css/1-tools/bourbon/helpers/_gradient-positions-parser.scss",
		"assets/css/1-tools/bourbon/helpers/_is-num.scss",
		"assets/css/1-tools/bourbon/helpers/_linear-angle-parser.scss",
		"assets/css/1-tools/bourbon/helpers/_linear-gradient-parser.scss",
		"assets/css/1-tools/bourbon/helpers/_linear-positions-parser.scss",
		"assets/css/1-tools/bourbon/helpers/_linear-side-corner-parser.scss",
		"assets/css/1-tools/bourbon/helpers/_radial-arg-parser.scss",
		"assets/css/1-tools/bourbon/helpers/_radial-positions-parser.scss",
		"assets/css/1-tools/bourbon/helpers/_radial-gradient-parser.scss",
		"assets/css/1-tools/bourbon/helpers/_render-gradients.scss",
		"assets/css/1-tools/bourbon/helpers/_shape-size-stripper.scss",
		"assets/css/1-tools/bourbon/helpers/_str-to-num.scss",
		"assets/css/1-tools/bourbon/functions/_assign.scss",
		"assets/css/1-tools/bourbon/functions/_color-lightness.scss",
		"assets/css/1-tools/bourbon/functions/_flex-grid.scss",
		"assets/css/1-tools/bourbon/functions/_golden-ratio.scss",
		"assets/css/1-tools/bourbon/functions/_grid-width.scss",
		"assets/css/1-tools/bourbon/functions/_modular-scale.scss",
		"assets/css/1-tools/bourbon/functions/_px-to-em.scss",
		"assets/css/1-tools/bourbon/functions/_px-to-rem.scss",
		"assets/css/1-tools/bourbon/functions/_strip-units.scss",
		"assets/css/1-tools/bourbon/functions/_tint-shade.scss",
		"assets/css/1-tools/bourbon/functions/_transition-property-name.scss",
		"assets/css/1-tools/bourbon/functions/_unpack.scss",
		"assets/css/1-tools/bourbon/css3/_animation.scss",
		"assets/css/1-tools/bourbon/css3/_appearance.scss",
		"assets/css/1-tools/bourbon/css3/_backface-visibility.scss",
		"assets/css/1-tools/bourbon/css3/_background.scss",
		"assets/css/1-tools/bourbon/css3/_background-image.scss",
		"assets/css/1-tools/bourbon/css3/_border-image.scss",
		"assets/css/1-tools/bourbon/css3/_border-radius.scss",
		"assets/css/1-tools/bourbon/css3/_box-sizing.scss",
		"assets/css/1-tools/bourbon/css3/_calc.scss",
		"assets/css/1-tools/bourbon/css3/_columns.scss",
		"assets/css/1-tools/bourbon/css3/_filter.scss",
		"assets/css/1-tools/bourbon/css3/_flex-box.scss",
		"assets/css/1-tools/bourbon/css3/_font-face.scss",
		"assets/css/1-tools/bourbon/css3/_font-feature-settings.scss",
		"assets/css/1-tools/bourbon/css3/_hyphens.scss",
		"assets/css/1-tools/bourbon/css3/_hidpi-media-query.scss",
		"assets/css/1-tools/bourbon/css3/_image-rendering.scss",
		"assets/css/1-tools/bourbon/css3/_keyframes.scss",
		"assets/css/1-tools/bourbon/css3/_linear-gradient.scss",
		"assets/css/1-tools/bourbon/css3/_perspective.scss",
		"assets/css/1-tools/bourbon/css3/_radial-gradient.scss",
		"assets/css/1-tools/bourbon/css3/_transform.scss",
		"assets/css/1-tools/bourbon/css3/_transition.scss",
		"assets/css/1-tools/bourbon/css3/_user-select.scss",
		"assets/css/1-tools/bourbon/css3/_placeholder.scss",
		"assets/css/1-tools/bourbon/addons/_button.scss",
		"assets/css/1-tools/bourbon/addons/_clearfix.scss",
		"assets/css/1-tools/bourbon/addons/_directional-values.scss",
		"assets/css/1-tools/bourbon/addons/_ellipsis.scss",
		"assets/css/1-tools/bourbon/addons/_font-family.scss",
		"assets/css/1-tools/bourbon/addons/_hide-text.scss",
		"assets/css/1-tools/bourbon/addons/_html5-input-types.scss",
		"assets/css/1-tools/bourbon/addons/_position.scss",
		"assets/css/1-tools/bourbon/addons/_prefixer.scss",
		"assets/css/1-tools/bourbon/addons/_retina-image.scss",
		"assets/css/1-tools/bourbon/addons/_size.scss",
		"assets/css/1-tools/bourbon/addons/_timing-functions.scss",
		"assets/css/1-tools/bourbon/addons/_triangle.scss",
		"assets/css/1-tools/bourbon/addons/_word-wrap.scss",
		"assets/css/1-tools/bourbon/_bourbon-deprecated-upcoming.scss",
		"assets/css/1-tools/_normalize.scss",
		"assets/css/1-tools/_fonts.scss",
		"assets/css/1-tools/animations/_animations-dir.sass",
		"assets/css/1-tools/animations/_bounceOut.scss",
		"assets/css/1-tools/animations/_fadeIn.sass",
		"assets/css/1-tools/animations/_bottomUp.sass",
		"assets/css/1-tools/animations/_none.sass",
		"assets/css/1-tools/animations/_topDown.sass",
		"assets/css/1-tools/animations/_bottomDoor.sass",
		"assets/css/1-tools/animations/_topDoor.sass",
		"assets/css/1-tools/animations/_leftRight.sass",
		"assets/css/1-tools/animations/_rightLeft.sass",
		"assets/css/1-tools/animations/_backgroundIn.sass",
		"assets/css/1-tools/animations/_textSlide.sass",
		"assets/css/1-tools/_spinner.scss",
		"assets/css/1-tools/_icon-font.scss",
		"assets/css/1-tools/_grid.scss",
		"assets/css/1-tools/_animate-in.scss",
		"assets/css/2-base/_-base-dir.sass",
		"assets/css/2-base/_base.sass",
		"assets/css/2-base/_placeholders.sass",
		"assets/css/3-sections/_-sections-dir.sass",
		"assets/css/3-sections/_header.scss",
		"assets/css/3-sections/_footer.sass",
		"assets/css/3-sections/_about.scss",
		"assets/css/3-sections/_work.scss",
		"assets/css/3-sections/_clients.sass",
		"assets/css/3-sections/_contact.sass",
		"assets/css/3-sections/_form.sass",
		"assets/css/3-sections/form-success.sass",
		"assets/css/3-sections/_project.scss"
	],
	"sourcesContent": [
		"// /////////////////////// --\n// // // ----\n// // Variables // ------\n// // // ----\n// /////////////////////// --\n\n// //------------------------------------------------\n// Transition the image paths from the settings file to usable SASS variables\n$animation: bounceOut;\n$logo-path: 'logo.svg';\n$hero-path: 'hero-bg.jpg';\n$avatar-path: 'travitar.jpg';\n\n// $projects: \"proj-1\", \"proj-2\", \"proj-3\", \"proj-4\", \"proj-5\", \"proj-6\", \"proj-7\", \"proj-8\"\n\n// //------------------------------------------------\n// // Set some colors as sass variables\n\n$accent: #c99065;\n$accent-light: #e1c184;\n$bgcolor: #e5eaee;\n$bgcolor2: #ffe100;\n\n\n$documentBackgroundColor: #fff;\n$headlineColor: #333;\n$textColor: #666;\n$linkColor: #c99065;\n$selectionColor: #ffff9e;\n\n\n/////////////////////////// --\n// // ----\n// SASS IMPORTS // ------\n// // ----\n/////////////////////////// --\n\n@import '1-tools/-tools-dir';\n@import '2-base/-base-dir';\n@import '3-sections/-sections-dir';\n",
		"@import 'bourbon/bourbon';\n@import 'normalize';\n@import 'fonts';\n@import 'animations/_animations-dir';\n@import 'spinner';\n@import 'icon-font';\n@import 'grid';\n@import 'animate-in';\n",
		"// Settings\n@import \"settings/prefixer\";\n@import \"settings/px-to-em\";\n\n// Custom Helpers\n@import \"helpers/convert-units\";\n@import \"helpers/gradient-positions-parser\";\n@import \"helpers/is-num\";\n@import \"helpers/linear-angle-parser\";\n@import \"helpers/linear-gradient-parser\";\n@import \"helpers/linear-positions-parser\";\n@import \"helpers/linear-side-corner-parser\";\n@import \"helpers/radial-arg-parser\";\n@import \"helpers/radial-positions-parser\";\n@import \"helpers/radial-gradient-parser\";\n@import \"helpers/render-gradients\";\n@import \"helpers/shape-size-stripper\";\n@import \"helpers/str-to-num\";\n\n// Custom Functions\n@import \"functions/assign\";\n@import \"functions/color-lightness\";\n@import \"functions/flex-grid\";\n@import \"functions/golden-ratio\";\n@import \"functions/grid-width\";\n@import \"functions/modular-scale\";\n@import \"functions/px-to-em\";\n@import \"functions/px-to-rem\";\n@import \"functions/strip-units\";\n@import \"functions/tint-shade\";\n@import \"functions/transition-property-name\";\n@import \"functions/unpack\";\n\n// CSS3 Mixins\n@import \"css3/animation\";\n@import \"css3/appearance\";\n@import \"css3/backface-visibility\";\n@import \"css3/background\";\n@import \"css3/background-image\";\n@import \"css3/border-image\";\n@import \"css3/border-radius\";\n@import \"css3/box-sizing\";\n@import \"css3/calc\";\n@import \"css3/columns\";\n@import \"css3/filter\";\n@import \"css3/flex-box\";\n@import \"css3/font-face\";\n@import \"css3/font-feature-settings\";\n@import \"css3/hyphens\";\n@import \"css3/hidpi-media-query\";\n@import \"css3/image-rendering\";\n@import \"css3/keyframes\";\n@import \"css3/linear-gradient\";\n@import \"css3/perspective\";\n@import \"css3/radial-gradient\";\n@import \"css3/transform\";\n@import \"css3/transition\";\n@import \"css3/user-select\";\n@import \"css3/placeholder\";\n\n// Addons & other mixins\n@import \"addons/button\";\n@import \"addons/clearfix\";\n@import \"addons/directional-values\";\n@import \"addons/ellipsis\";\n@import \"addons/font-family\";\n@import \"addons/hide-text\";\n@import \"addons/html5-input-types\";\n@import \"addons/position\";\n@import \"addons/prefixer\";\n@import \"addons/retina-image\";\n@import \"addons/size\";\n@import \"addons/timing-functions\";\n@import \"addons/triangle\";\n@import \"addons/word-wrap\";\n\n// Soon to be deprecated Mixins\n@import \"bourbon-deprecated-upcoming\";\n",
		"// Variable settings for /addons/prefixer.scss\n$prefix-for-webkit:    true !default;\n$prefix-for-mozilla:   true !default;\n$prefix-for-microsoft: true !default;\n$prefix-for-opera:     true !default;\n$prefix-for-spec:      true !default; // required for keyframe mixin\n",
		"$em-base: 16px !default;\n",
		"//************************************************************************//\n// Helper function for str-to-num fn.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _convert-units($number, $unit) {\n  $strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw' 'vh' 'vmin' 'vmax', 'deg', 'rad', 'grad', 'turn';\n  $units:   1px  1cm  1mm  1%  1ch  1pica  1in  1em  1rem  1pt  1pc  1ex  1vw  1vh  1vmin  1vmax,  1deg,  1rad,  1grad, 1turn;\n  $index: index($strings, $unit);\n\n  @if not $index {\n    @warn \"Unknown unit `#{$unit}`.\";\n    @return false;\n  }\n  @return $number * nth($units, $index);\n}\n",
		"@function _gradient-positions-parser($gradient-type, $gradient-positions) {\n  @if $gradient-positions\n  and ($gradient-type == linear)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _linear-positions-parser($gradient-positions);\n  }\n  @else if $gradient-positions\n  and ($gradient-type == radial)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _radial-positions-parser($gradient-positions);\n  }\n  @return $gradient-positions;\n}\n",
		"//************************************************************************//\n// Helper for linear-gradient-parser\n//************************************************************************//\n@function _is-num($char) {\n  $values: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' 0 1 2 3 4 5 6 7 8 9;\n  $index: index($values, $char);\n  @return if($index, true, false);\n}\n",
		"// Private function for linear-gradient-parser\n@function _linear-angle-parser($image, $first-val, $prefix, $suffix) {\n  $offset: null;\n  $unit-short:  str-slice($first-val, str-length($first-val) - 2, str-length($first-val));\n  $unit-long:   str-slice($first-val, str-length($first-val) - 3, str-length($first-val));\n\n  @if ($unit-long == \"grad\") or\n      ($unit-long == \"turn\") {\n    $offset: if($unit-long == \"grad\", -100grad * 3, -0.75turn);\n  }\n\n  @else if ($unit-short == \"deg\") or\n           ($unit-short == \"rad\") {\n    $offset: if($unit-short == \"deg\", -90 * 3, 1.6rad);\n  }\n\n  @if $offset {\n    $num: _str-to-num($first-val);\n\n    @return (\n      webkit-image: -webkit- + $prefix + ($offset - $num) + $suffix,\n      spec-image: $image\n    );\n  }\n}\n",
		"@function _linear-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 0, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $has-multiple-vals: str-index($first-val, \" \");\n  $has-single-position: unquote(_position-flipper($first-val) + \"\");\n  $has-angle: _is-num(str-slice($first-val, 0, 0));\n\n  @if $has-multiple-vals {\n    $gradients: _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals);\n  }\n\n  @else if $has-single-position != \"\" {\n    $pos: unquote($has-single-position + \"\");\n\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n\n  @else if $has-angle {\n    // Rotate degree for webkit\n    $gradients: _linear-angle-parser($image, $first-val, $prefix, $suffix);\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n",
		"@function _linear-positions-parser($pos) {\n  $type: type-of(nth($pos, 1));\n  $spec: null;\n  $degree: null;\n  $side: null;\n  $corner: null;\n  $length: length($pos);\n  // Parse Side and corner positions\n  @if ($length > 1) {\n    @if nth($pos, 1) == \"to\" { // Newer syntax\n      $side: nth($pos, 2);\n\n      @if $length == 2 { // eg. to top\n        // Swap for backwards compatability\n        $degree: _position-flipper(nth($pos, 2));\n      }\n      @else if $length == 3 { // eg. to top left\n        $corner: nth($pos, 3);\n      }\n    }\n    @else if $length == 2 { // Older syntax (\"top left\")\n      $side: _position-flipper(nth($pos, 1));\n      $corner: _position-flipper(nth($pos, 2));\n    }\n\n    @if (\"#{$side} #{$corner}\" == \"left top\") or (\"#{$side} #{$corner}\" == \"top left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right top\") or (\"#{$side} #{$corner}\" == \"top right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right bottom\") or (\"#{$side} #{$corner}\" == \"bottom right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"left bottom\") or (\"#{$side} #{$corner}\" == \"bottom left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    $spec: to $side $corner;\n  }\n  @else if $length == 1 {\n    // Swap for backwards compatability\n    @if $type == string {\n      $degree: $pos;\n      $spec: to _position-flipper($pos);\n    }\n    @else {\n      $degree: -270 - $pos; //rotate the gradient opposite from spec\n      $spec: $pos;\n    }\n  }\n  $degree: unquote($degree + \",\");\n  $spec:   unquote($spec + \",\");\n  @return $degree $spec;\n}\n\n@function _position-flipper($pos) {\n @return if($pos == left, right, null)\n         if($pos == right, left, null)\n         if($pos == top, bottom, null)\n         if($pos == bottom, top, null);\n}\n",
		"// Private function for linear-gradient-parser\n@function _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals) {\n  $val-1: str-slice($first-val, 0, $has-multiple-vals - 1 );\n  $val-2: str-slice($first-val, $has-multiple-vals + 1, str-length($first-val));\n  $val-3: null;\n  $has-val-3: str-index($val-2, \" \");\n\n  @if $has-val-3 {\n    $val-3: str-slice($val-2, $has-val-3 + 1, str-length($val-2));\n    $val-2: str-slice($val-2, 0, $has-val-3 - 1);\n  }\n\n  $pos: _position-flipper($val-1) _position-flipper($val-2) _position-flipper($val-3);\n  $pos: unquote($pos + \"\");\n\n  // Use old spec for webkit\n  @if $val-1 == \"to\" {\n    @return (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  // Bring the code up to spec\n  @else {\n    @return (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n}\n",
		"@function _radial-arg-parser($G1, $G2, $pos, $shape-size) {\n  @each $value in $G1, $G2 {\n    $first-val: nth($value, 1);\n    $pos-type:  type-of($first-val);\n    $spec-at-index: null;\n\n    // Determine if spec was passed to mixin\n    @if type-of($value) == list {\n      $spec-at-index: if(index($value, at), index($value, at), false);\n    }\n    @if $spec-at-index {\n      @if $spec-at-index > 1 {\n        @for $i from 1 through ($spec-at-index - 1) {\n          $shape-size: $shape-size nth($value, $i);\n        }\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      @else if $spec-at-index == 1 {\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      $G1: null;\n    }\n\n    // If not spec calculate correct values\n    @else {\n      @if ($pos-type != color) or ($first-val != \"transparent\") {\n        @if ($pos-type == number)\n        or ($first-val == \"center\")\n        or ($first-val == \"top\")\n        or ($first-val == \"right\")\n        or ($first-val == \"bottom\")\n        or ($first-val == \"left\") {\n\n          $pos: $value;\n\n          @if $pos == $G1 {\n            $G1: null;\n          }\n        }\n\n        @else if\n           ($first-val == \"ellipse\")\n        or ($first-val == \"circle\")\n        or ($first-val == \"closest-side\")\n        or ($first-val == \"closest-corner\")\n        or ($first-val == \"farthest-side\")\n        or ($first-val == \"farthest-corner\")\n        or ($first-val == \"contain\")\n        or ($first-val == \"cover\") {\n\n          $shape-size: $value;\n\n          @if $value == $G1 {\n            $G1: null;\n          }\n\n          @else if $value == $G2 {\n            $G2: null;\n          }\n        }\n      }\n    }\n  }\n  @return $G1, $G2, $pos, $shape-size;\n}\n",
		"@function _radial-positions-parser($gradient-pos) {\n  $shape-size: nth($gradient-pos, 1);\n  $pos:        nth($gradient-pos, 2);\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  $pre-spec: unquote(if($pos, \"#{$pos}, \", null))\n             unquote(if($shape-size, \"#{$shape-size},\", null));\n  $pos-spec: if($pos, \"at #{$pos}\", null);\n\n  $spec: \"#{$shape-size-spec} #{$pos-spec}\";\n\n  // Add comma\n  @if ($spec != '  ') {\n    $spec: \"#{$spec},\"\n  }\n\n  @return $pre-spec $spec;\n}\n",
		"@function _radial-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 0, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $is-spec-syntax: str-index($first-val, \"at\");\n\n  @if $is-spec-syntax and $is-spec-syntax > 1 {\n    $keyword: str-slice($first-val, 1, $is-spec-syntax - 2);\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n    $pos: append($pos, $keyword, comma);\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    )\n  }\n\n  @else if $is-spec-syntax == 1 {\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    )\n  }\n\n  @else if str-index($image, \"cover\") or str-index($image, \"contain\") {\n    @warn \"Radial-gradient needs to be updated to conform to latest spec.\";\n\n    $gradients: (\n      webkit-image: null,\n      spec-image: $image\n    )\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    )\n  }\n\n  @return $gradients;\n}\n",
		"// User for linear and radial gradients within background-image or border-image properties\n\n@function _render-gradients($gradient-positions, $gradients, $gradient-type, $vendor: false) {\n  $pre-spec: null;\n  $spec: null;\n  $vendor-gradients: null;\n  @if $gradient-type == linear {\n    @if $gradient-positions {\n      $pre-spec: nth($gradient-positions, 1);\n      $spec:     nth($gradient-positions, 2);\n    }\n  }\n  @else if $gradient-type == radial {\n    $pre-spec: nth($gradient-positions, 1);\n    $spec:     nth($gradient-positions, 2);\n  }\n\n  @if $vendor {\n    $vendor-gradients: -#{$vendor}-#{$gradient-type}-gradient(#{$pre-spec} $gradients);\n  }\n  @else if $vendor == false {\n    $vendor-gradients: \"#{$gradient-type}-gradient(#{$spec} #{$gradients})\";\n    $vendor-gradients: unquote($vendor-gradients);\n  }\n  @return $vendor-gradients;\n}\n",
		"@function _shape-size-stripper($shape-size) {\n  $shape-size-spec: null;\n  @each $value in $shape-size {\n    @if ($value == \"cover\") or ($value == \"contain\") {\n      $value: null;\n    }\n    $shape-size-spec: \"#{$shape-size-spec} #{$value}\";\n  }\n  @return $shape-size-spec;\n}\n",
		"//************************************************************************//\n// Helper function for linear/radial-gradient-parsers.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _str-to-num($string) {\n  // Matrices\n  $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == '-' {\n      $minus: true;\n    }\n\n    @else if $character == '.' {\n      $divider: 1;\n    }\n\n    @else {\n      @if not $index {\n        $result: if($minus, $result * -1, $result);\n        @return _convert-units($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      }\n\n      @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n  @return if($minus, $result * -1, $result);\n}\n",
		"@function assign-inputs($inputs, $pseudo: null) {\n  $list : ();\n\n  @each $input in $inputs {\n    $input: unquote($input);\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\n    $list: append($list, $input, comma);\n  }\n\n  @return $list;\n}",
		"// Programatically determines whether a color is light or dark\n// Returns a boolean\n// More details here http://robots.thoughtbot.com/closer-look-color-lightness\n\n@function is-light($hex-color) {\n  $-local-red: red(rgba($hex-color, 1.0));\n  $-local-green: green(rgba($hex-color, 1.0));\n  $-local-blue: blue(rgba($hex-color, 1.0));\n\n  $-local-lightness: ($-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722) / 255;\n\n  @return $-local-lightness > .6;\n}\n",
		"// Flexible grid\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n}\n\n// Flexible gutter\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n}\n\n// The $fg-column, $fg-gutter and $fg-max-columns variables must be defined in your base stylesheet to properly use the flex-grid function.\n// This function takes the fluid grid equation (target / context = result) and uses columns to help define each.\n//\n// The calculation presumes that your column structure will be missing the last gutter:\n//\n//   -- column -- gutter -- column -- gutter -- column\n//\n//  $fg-column: 60px;             // Column Width\n//  $fg-gutter: 25px;             // Gutter Width\n//  $fg-max-columns: 12;          // Total Columns For Main Container\n//\n//  div {\n//    width: flex-grid(4);        // returns (315px / 995px) = 31.65829%;\n//    margin-left: flex-gutter(); // returns (25px / 995px) = 2.51256%;\n//\n//    p {\n//      width: flex-grid(2, 4);  // returns (145px / 315px) = 46.031746%;\n//      float: left;\n//      margin: flex-gutter(4);  // returns (25px / 315px) = 7.936508%;\n//    }\n//\n//    blockquote {\n//      float: left;\n//      width: flex-grid(2, 4); // returns (145px / 315px) = 46.031746%;\n//    }\n//  }",
		"@function golden-ratio($value, $increment) {\n  @return modular-scale($value, $increment, $golden)\n}\n",
		"@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n}\n\n// The $gw-column and $gw-gutter variables must be defined in your base stylesheet to properly use the grid-width function.\n//\n//  $gw-column: 100px;         // Column Width\n//  $gw-gutter: 40px;          // Gutter Width\n//\n//  div {\n//    width: grid-width(4);    // returns 520px;\n//    margin-left: $gw-gutter; // returns 40px;\n//  }\n",
		"// Scaling Variables\n$golden:           1.618;\n$minor-second:     1.067;\n$major-second:     1.125;\n$minor-third:      1.2;\n$major-third:      1.25;\n$perfect-fourth:   1.333;\n$augmented-fourth: 1.414;\n$perfect-fifth:    1.5;\n$minor-sixth:      1.6;\n$major-sixth:      1.667;\n$minor-seventh:    1.778;\n$major-seventh:    1.875;\n$octave:           2;\n$major-tenth:      2.5;\n$major-eleventh:   2.667;\n$major-twelfth:    3;\n$double-octave:    4;\n\n@function modular-scale($value, $increment, $ratio) {\n  $v1: nth($value, 1);\n  $v2: nth($value, length($value));\n  $value: $v1;\n\n  // scale $v2 to just above $v1\n  @while $v2 > $v1 {\n    $v2: ($v2 / $ratio); // will be off-by-1\n  }\n  @while $v2 < $v1 {\n    $v2: ($v2 * $ratio); // will fix off-by-1\n  }\n\n  // check AFTER scaling $v2 to prevent double-counting corner-case\n  $double-stranded: $v2 > $v1;\n\n  @if $increment > 0 {\n    @for $i from 1 through $increment {\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\n        $value: $v2;\n        $v2: ($v2 * $ratio);\n      } @else {\n        $v1: ($v1 * $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @if $increment < 0 {\n    // adjust $v2 to just below $v1\n    @if $double-stranded {\n      $v2: ($v2 / $ratio);\n    }\n\n    @for $i from $increment through -1 {\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\n        $value: $v2;\n        $v2: ($v2 / $ratio);\n      } @else {\n        $v1: ($v1 / $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @return $value;\n}\n",
		"// Convert pixels to ems\n// eg. for a relational value of 12px write em(12) when the parent is 16px\n// if the parent is another value say 24px write em(12, 24)\n\n@function em($pxval, $base: $em-base) {\n  @if not unitless($pxval) {\n      $pxval: strip-units($pxval);\n  }\n  @if not unitless($base) {\n      $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1em;\n}\n",
		"// Convert pixels to rems\n// eg. for a relational value of 12px write rem(12)\n// Assumes $em-base is the font-size of <html>\n\n@function rem($pxval) {\n  @if not unitless($pxval) {\n      $pxval: strip-units($pxval);\n  }\n\n  $base: $em-base;\n  @if not unitless($base) {\n      $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1rem;\n}\n",
		"// Srtips the units from a value. e.g. 12px -> 12\n\n@function strip-units($val) {\n  @return ($val / ($val * 0 + 1));\n}\n",
		"// Add percentage of white to a color\n@function tint($color, $percent){\n  @return mix(white, $color, $percent);\n}\n\n// Add percentage of black to a color\n@function shade($color, $percent){\n  @return mix(black, $color, $percent);\n}\n",
		"// Return vendor-prefixed property names if appropriate\n// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background\n//************************************************************************//\n@function transition-property-names($props, $vendor: false) {\n\t$new-props: ();\n\t\n\t@each $prop in $props {\n\t\t$new-props: append($new-props, transition-property-name($prop, $vendor), comma);\n\t}\n\n\t@return $new-props;\n}\n\n@function transition-property-name($prop, $vendor: false) {\n\t// put other properties that need to be prefixed here aswell\n\t@if $vendor and $prop == transform {\n\t\t@return unquote('-'+$vendor+'-'+$prop);\n\t}\n\t@else {\n\t\t@return $prop;\n\t}\n}",
		"// Convert shorthand to the 4-value syntax\n\n@function unpack($shorthand) {\n  @if length($shorthand) == 1 {\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\n  }\n  @else if length($shorthand) == 2 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\n  }\n  @else if length($shorthand) == 3 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\n  }\n  @else {\n    @return $shorthand;\n  }\n}\n\n",
		"// http://www.w3.org/TR/css3-animations/#the-animation-name-property-\n// Each of these mixins support comma separated lists of values, which allows different transitions for individual properties to be described in a single style rule. Each value in the list corresponds to the value at that same position in the other properties.\n\n// Official animation shorthand property.\n@mixin animation ($animations...) {\n  @include prefixer(animation, $animations, webkit moz spec);\n}\n\n// Individual Animation Properties\n@mixin animation-name ($names...) {\n  @include prefixer(animation-name, $names, webkit moz spec);\n}\n\n\n@mixin animation-duration ($times...) {\n  @include prefixer(animation-duration, $times, webkit moz spec);\n}\n\n\n@mixin animation-timing-function ($motions...) {\n// ease | linear | ease-in | ease-out | ease-in-out\n  @include prefixer(animation-timing-function, $motions, webkit moz spec);\n}\n\n\n@mixin animation-iteration-count ($values...) {\n// infinite | <number>\n  @include prefixer(animation-iteration-count, $values, webkit moz spec);\n}\n\n\n@mixin animation-direction ($directions...) {\n// normal | alternate\n  @include prefixer(animation-direction, $directions, webkit moz spec);\n}\n\n\n@mixin animation-play-state ($states...) {\n// running | paused\n  @include prefixer(animation-play-state, $states, webkit moz spec);\n}\n\n\n@mixin animation-delay ($times...) {\n  @include prefixer(animation-delay, $times, webkit moz spec);\n}\n\n\n@mixin animation-fill-mode ($modes...) {\n// none | forwards | backwards | both\n  @include prefixer(animation-fill-mode, $modes, webkit moz spec);\n}\n",
		"@mixin appearance ($value) {\n  @include prefixer(appearance, $value, webkit moz ms o spec);\n}\n",
		"//************************************************************************//\n// Backface-visibility mixin\n//************************************************************************//\n@mixin backface-visibility($visibility) {\n  @include prefixer(backface-visibility, $visibility, webkit spec);\n}\n",
		"//************************************************************************//\n// Background property for adding multiple backgrounds using shorthand\n// notation.\n//************************************************************************//\n\n@mixin background($backgrounds...) {\n  $webkit-backgrounds: ();\n  $spec-backgrounds: ();\n\n  @each $background in $backgrounds {\n    $webkit-background: ();\n    $spec-background: ();\n    $background-type: type-of($background);\n\n    @if $background-type == string or list {\n      $background-str: if($background-type == list, nth($background, 1), $background);\n\n      $url-str:       str-slice($background-str, 0, 3);\n      $gradient-type: str-slice($background-str, 0, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-background: $background;\n          $spec-background: $background;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-background: $background;\n          $spec-background: $background;\n      }\n    }\n\n    @else {\n      $webkit-background: $background;\n        $spec-background: $background;\n    }\n\n    $webkit-backgrounds: append($webkit-backgrounds, $webkit-background, comma);\n    $spec-backgrounds:   append($spec-backgrounds,   $spec-background,   comma);\n  }\n\n  background: $webkit-backgrounds;\n  background: $spec-backgrounds;\n}\n",
		"//************************************************************************//\n// Background-image property for adding multiple background images with\n// gradients, or for stringing multiple gradients together.\n//************************************************************************//\n\n@mixin background-image($images...) {\n  $webkit-images: ();\n  $spec-images: ();\n\n  @each $image in $images {\n    $webkit-image: ();\n    $spec-image: ();\n\n    @if (type-of($image) == string) {\n      $url-str:       str-slice($image, 0, 3);\n      $gradient-type: str-slice($image, 0, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-image: $image;\n          $spec-image: $image;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser($image);\n        $webkit-image:  map-get($gradients, webkit-image);\n        $spec-image:    map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser($image);\n        $webkit-image: map-get($gradients, webkit-image);\n        $spec-image:   map-get($gradients, spec-image);\n      }\n    }\n\n    $webkit-images: append($webkit-images, $webkit-image, comma);\n    $spec-images:   append($spec-images,   $spec-image,   comma);\n  }\n\n  background-image: $webkit-images;\n  background-image: $spec-images;\n}\n",
		"@mixin border-image($borders...) {\n  $webkit-borders: ();\n  $spec-borders: ();\n\n  @each $border in $borders {\n    $webkit-border: ();\n    $spec-border: ();\n    $border-type: type-of($border);\n\n    @if $border-type == string or list {\n      $border-str: if($border-type == list, nth($border, 1), $border);\n\n      $url-str:       str-slice($border-str, 0, 3);\n      $gradient-type: str-slice($border-str, 0, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-border: $border;\n          $spec-border: $border;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-border: $border;\n          $spec-border: $border;\n      }\n    }\n\n    @else {\n      $webkit-border: $border;\n        $spec-border: $border;\n    }\n\n    $webkit-borders: append($webkit-borders, $webkit-border, comma);\n    $spec-borders:   append($spec-borders,   $spec-border,   comma);\n  }\n\n  -webkit-border-image: $webkit-borders;\n          border-image: $spec-borders;\n          border-style: solid;\n}\n\n//Examples:\n// @include border-image(url(\"image.png\"));\n// @include border-image(url(\"image.png\") 20 stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow));\n// @include border-image(linear-gradient(45deg, orange, yellow) stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow) 20 30 40 50 stretch round);\n// @include border-image(radial-gradient(top, cover, orange, yellow, orange));\n",
		"//************************************************************************//\n// Shorthand Border-radius mixins\n//************************************************************************//\n@mixin border-top-radius($radii) {\n  @include prefixer(border-top-left-radius, $radii, spec);\n  @include prefixer(border-top-right-radius, $radii, spec);\n}\n\n@mixin border-bottom-radius($radii) {\n  @include prefixer(border-bottom-left-radius, $radii, spec);\n  @include prefixer(border-bottom-right-radius, $radii, spec);\n}\n\n@mixin border-left-radius($radii) {\n  @include prefixer(border-top-left-radius, $radii, spec);\n  @include prefixer(border-bottom-left-radius, $radii, spec);\n}\n\n@mixin border-right-radius($radii) {\n  @include prefixer(border-top-right-radius, $radii, spec);\n  @include prefixer(border-bottom-right-radius, $radii, spec);\n}\n",
		"@mixin box-sizing ($box) {\n//  content-box | border-box | inherit\n  @include prefixer(box-sizing, $box, webkit moz spec);\n}\n",
		"@mixin calc($property, $value) {\n  #{$property}: -webkit-calc(#{$value});\n  #{$property}:         calc(#{$value});\n}\n",
		"@mixin columns($arg: auto) {\n// <column-count> || <column-width>\n  @include prefixer(columns, $arg, webkit moz spec);\n}\n\n@mixin column-count($int: auto) {\n// auto || integer\n  @include prefixer(column-count, $int, webkit moz spec);\n}\n\n@mixin column-gap($length: normal) {\n// normal || length\n  @include prefixer(column-gap, $length, webkit moz spec);\n}\n\n@mixin column-fill($arg: auto) {\n// auto || length\n  @include prefixer(column-fill, $arg, webkit moz spec);\n}\n\n@mixin column-rule($arg) {\n// <border-width> || <border-style> || <color>\n  @include prefixer(column-rule, $arg, webkit moz spec);\n}\n\n@mixin column-rule-color($color) {\n  @include prefixer(column-rule-color, $color, webkit moz spec);\n}\n\n@mixin column-rule-style($style: none) {\n// none | hidden | dashed | dotted | double | groove | inset | inset | outset | ridge | solid\n  @include prefixer(column-rule-style, $style, webkit moz spec);\n}\n\n@mixin column-rule-width ($width: none) {\n  @include prefixer(column-rule-width, $width, webkit moz spec);\n}\n\n@mixin column-span($arg: none) {\n// none || all\n  @include prefixer(column-span, $arg, webkit moz spec);\n}\n\n@mixin column-width($length: auto) {\n// auto || length\n  @include prefixer(column-width, $length, webkit moz spec);\n}\n",
		"@mixin filter($function: none) {\n  // <filter-function> [<filter-function]* | none\n  @include prefixer(filter, $function, webkit spec);\n}\n\n",
		"// CSS3 Flexible Box Model and property defaults\n\n// Custom shorthand notation for flexbox\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\n  @include display-box;\n  @include box-orient($orient);\n  @include box-pack($pack);\n  @include box-align($align);\n}\n\n@mixin display-box {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox; // IE 10\n  display: box;\n}\n\n@mixin box-orient($orient: inline-axis) {\n// horizontal|vertical|inline-axis|block-axis|inherit\n  @include prefixer(box-orient, $orient, webkit moz spec);\n}\n\n@mixin box-pack($pack: start) {\n// start|end|center|justify\n  @include prefixer(box-pack, $pack, webkit moz spec);\n  -ms-flex-pack: $pack; // IE 10\n}\n\n@mixin box-align($align: stretch) {\n// start|end|center|baseline|stretch\n  @include prefixer(box-align, $align, webkit moz spec);\n  -ms-flex-align: $align; // IE 10\n}\n\n@mixin box-direction($direction: normal) {\n// normal|reverse|inherit\n  @include prefixer(box-direction, $direction, webkit moz spec);\n  -ms-flex-direction: $direction; // IE 10\n}\n\n@mixin box-lines($lines: single) {\n// single|multiple\n  @include prefixer(box-lines, $lines, webkit moz spec);\n}\n\n@mixin box-ordinal-group($int: 1) {\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n  -ms-flex-order: $int; // IE 10\n}\n\n@mixin box-flex($value: 0.0) {\n  @include prefixer(box-flex, $value, webkit moz spec);\n  -ms-flex: $value; // IE 10\n}\n\n@mixin box-flex-group($int: 1) {\n  @include prefixer(box-flex-group, $int, webkit moz spec);\n}\n\n// CSS3 Flexible Box Model and property defaults\n// Unified attributes for 2009, 2011, and 2012 flavours.\n\n// 2009 - display (box | inline-box)\n// 2011 - display (flexbox | inline-flexbox)\n// 2012 - display (flex | inline-flex)\n@mixin display($value) {\n//  flex | inline-flex\n    @if $value == \"flex\" {\n        // 2009\n        display: -webkit-box;\n        display: -moz-box;\n        display: box;\n\n        // 2012\n        display: -webkit-flex;\n        display: -moz-flex;\n        display: -ms-flexbox; // 2011 (IE 10)\n        display: flex;\n    }\n\n    @elseif $value == \"inline-flex\" {\n        display: -webkit-inline-box;\n        display: -moz-inline-box;\n        display: inline-box;\n\n        display: -webkit-inline-flex;\n        display: -moz-inline-flex;\n        display: -ms-inline-flexbox;\n        display: inline-flex;\n    }\n\n    @else {\n        display: $value;\n    }\n}\n\n// 2009 - box-flex (integer)\n// 2011 - flex (decimal | width decimal)\n// 2012 - flex (integer integer width)\n@mixin flex($value) {\n\n    // Grab flex-grow for older browsers.\n    $flex-grow: nth($value, 1);\n\n    // 2009\n    @include prefixer(box-flex, $flex-grow, webkit moz spec);\n\n    // 2011 (IE 10), 2012\n    @include prefixer(flex, $value, webkit moz ms spec);\n}\n\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\n//      - box-direction (normal | reverse)      \n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\n@mixin flex-direction($value: row) {\n\n    // Alt values.\n    $value-2009: $value;\n    $value-2011: $value;\n    $direction: \"normal\";\n\n    @if $value == row {\n        $value-2009: horizontal;\n    }\n\n    @elseif $value == \"row-reverse\" {\n        $value-2009: horizontal;\n        $direction: reverse;\n    }\n\n    @elseif $value == column {\n        $value-2009: vertical;\n    }\n\n    @elseif $value == \"column-reverse\" {\n        $value-2009: vertical;\n        $direction: reverse;\n    }\n\n    // 2009\n    @include prefixer(box-orient, $value-2009, webkit moz spec);\n    @if $direction == \"reverse\" {\n        @include prefixer(box-direction, $direction, webkit moz spec);\n    }\n\n    // 2012\n    @include prefixer(flex-direction, $value, webkit moz spec);\n\n    // 2011 (IE 10)\n    -ms-flex-direction: $value;\n}\n\n// 2009 - box-lines (single | multiple)\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\n@mixin flex-wrap($value: nowrap) {\n\n    // Alt values.\n    $alt-value: $value;\n    @if $value == nowrap {\n        $alt-value: single;\n    }\n\n    @elseif $value == wrap {\n        $alt-value: multiple;\n    }\n\n    @elseif $value == \"wrap-reverse\" {\n        $alt-value: multiple;\n    }\n\n    @include prefixer(box-lines, $alt-value, webkit moz spec);\n    @include prefixer(flex-wrap, $value, webkit moz ms spec);\n}\n\n// 2009 - TODO: parse values into flex-direction/flex-wrap\n// 2011 - TODO: parse values into flex-direction/flex-wrap\n// 2012 - flex-flow (flex-direction || flex-wrap)\n@mixin flex-flow($value) {\n    @include prefixer(flex-flow, $value, webkit moz spec);\n}\n\n// 2009 - box-ordinal-group (integer)\n// 2011 - flex-order (integer)\n// 2012 - order (integer)\n@mixin order($int: 0) {\n    // 2009\n    @include prefixer(box-ordinal-group, $int, webkit moz spec);\n\n    // 2012\n    @include prefixer(order, $int, webkit moz spec);\n\n    // 2011 (IE 10)\n    -ms-flex-order: $int;\n}\n\n// 2012 - flex-grow (number)\n@mixin flex-grow($number: 0) {\n    @include prefixer(flex-grow, $number, webkit moz spec);\n    -ms-flex-positive: $number;\n}\n\n// 2012 - flex-shrink (number)\n@mixin flex-shrink($number: 1) {\n    @include prefixer(flex-shrink, $number, webkit moz spec);\n    -ms-flex-negative: $number;\n}\n\n// 2012 - flex-basis (number)\n@mixin flex-basis($width: auto) {\n    @include prefixer(flex-basis, $width, webkit moz spec);\n    -ms-flex-preferred-size: $width;\n}\n\n// 2009 - box-pack (start | end | center | justify)\n// 2011 - flex-pack (start | end | center | justify)\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\n@mixin justify-content ($value: flex-start) {\n\n    // Alt values.\n    $alt-value: $value;\n    @if $value == \"flex-start\" {\n        $alt-value: start;\n    }\n\n    @elseif $value == \"flex-end\" {\n        $alt-value: end;\n    }\n\n    @elseif $value == \"space-between\" {\n        $alt-value: justify;\n    }\n\n    @elseif $value == \"space-around\" {\n        $alt-value: center;\n    }\n\n    // 2009\n    @include prefixer(box-pack, $alt-value, webkit moz spec);\n\n    // 2012\n    @include prefixer(justify-content, $value, webkit moz ms o spec);\n\n    // 2011 (IE 10)\n    -ms-flex-pack: $alt-value;\n}\n\n// 2009 - box-align (start | end | center | baseline | stretch)\n// 2011 - flex-align (start | end | center | baseline | stretch)\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\n@mixin align-items($value: stretch) {\n\n    $alt-value: $value;\n\n    @if $value == \"flex-start\" {\n        $alt-value: start;\n    }    \n\n    @elseif $value == \"flex-end\" {\n        $alt-value: end;\n    }\n\n    // 2009\n    @include prefixer(box-align, $alt-value, webkit moz spec);\n\n    // 2012\n    @include prefixer(align-items, $value, webkit moz ms o spec);\n    \n    // 2011 (IE 10)\n    -ms-flex-align: $alt-value;    \n}\n\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\n@mixin align-self($value: auto) {\n\n    $value-2011: $value;\n    @if $value == \"flex-start\" {\n        $value-2011: start;\n    }    \n\n    @elseif $value == \"flex-end\" {\n        $value-2011: end;\n    }\n\n    // 2012\n    @include prefixer(align-self, $value, webkit moz spec);\n\n    // 2011 (IE 10)\n    -ms-flex-item-align: $value-2011;\n}\n\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\n@mixin align-content($value: stretch) {\n\n    $value-2011: $value;\n    @if $value == \"flex-start\" {\n        $value-2011: start;\n    }    \n\n    @elseif $value == \"flex-end\" {\n        $value-2011: end;\n    }\n\n    @elseif $value == \"space-between\" {\n        $value-2011: justify;\n    }\n\n    @elseif $value == \"space-around\" {\n        $value-2011: distribute;\n    }\n\n    // 2012\n    @include prefixer(align-content, $value, webkit moz spec);\n\n    // 2011 (IE 10)\n    -ms-flex-line-pack: $value-2011;\n}\n\n",
		"// Order of the includes matters, and it is: normal, bold, italic, bold+italic.\n\n@mixin font-face($font-family, $file-path, $weight: normal, $style: normal, $asset-pipeline: false ) {\n  @font-face {\n    font-family: $font-family;\n    font-weight: $weight;\n    font-style: $style;\n\n    @if $asset-pipeline == true {\n      src: font-url('#{$file-path}.eot');\n      src: font-url('#{$file-path}.eot?#iefix')          format('embedded-opentype'),\n           font-url('#{$file-path}.woff')                format('woff'),\n           font-url('#{$file-path}.ttf')                 format('truetype'),\n           font-url('#{$file-path}.svg##{$font-family}') format('svg');\n    } @else {\n      src: url('#{$file-path}.eot');\n      src: url('#{$file-path}.eot?#iefix')               format('embedded-opentype'),\n           url('#{$file-path}.woff')                     format('woff'),\n           url('#{$file-path}.ttf')                      format('truetype'),\n           url('#{$file-path}.svg##{$font-family}')      format('svg');\n    }\n  }\n}\n",
		"// Font feature settings mixin and property default.\n// Examples: @include font-feature-settings(\"liga\");\n//           @include font-feature-settings(\"lnum\" false);\n//           @include font-feature-settings(\"pnum\" 1, \"kern\" 0);\n//           @include font-feature-settings(\"ss01\", \"ss02\");\n\n@mixin font-feature-settings($settings...) {\n  @if length($settings) == 0 { $settings: none; }\n  @include prefixer(font-feature-settings, $settings, webkit moz ms spec);\n}",
		"@mixin hyphens($hyphenation: none) {\n// none | manual | auto\n  @include prefixer(hyphens, $hyphenation, webkit moz ms spec);\n}",
		"// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)\n@mixin hidpi($ratio: 1.3) {\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\n  only screen and (min--moz-device-pixel-ratio: $ratio),\n  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),\n  only screen and (min-resolution: #{round($ratio*96)}dpi),\n  only screen and (min-resolution: #{$ratio}dppx) {\n    @content;\n  }\n}\n",
		"@mixin image-rendering ($mode:auto) {\n\n  @if ($mode == crisp-edges) {\n      -ms-interpolation-mode: nearest-neighbor; // IE8+\n      image-rendering: -moz-crisp-edges;\n      image-rendering: -o-crisp-edges;\n      image-rendering: -webkit-optimize-contrast;\n      image-rendering: crisp-edges;\n  }\n\n  @else {\n      image-rendering: $mode;\n  }\n}\n",
		"// Adds keyframes blocks for supported prefixes, removing redundant prefixes in the block's content\n@mixin keyframes($name) {\n  $original-prefix-for-webkit:    $prefix-for-webkit;\n  $original-prefix-for-mozilla:   $prefix-for-mozilla;\n  $original-prefix-for-microsoft: $prefix-for-microsoft;\n  $original-prefix-for-opera:     $prefix-for-opera;\n  $original-prefix-for-spec:      $prefix-for-spec;\n\n  @if $original-prefix-for-webkit {\n    @include disable-prefix-for-all();\n    $prefix-for-webkit: true !global;\n    @-webkit-keyframes #{$name} {\n      @content;\n    }\n  }\n  @if $original-prefix-for-mozilla {\n    @include disable-prefix-for-all();\n    $prefix-for-mozilla: true !global;\n    @-moz-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  $prefix-for-webkit:    $original-prefix-for-webkit    !global;\n  $prefix-for-mozilla:   $original-prefix-for-mozilla   !global;\n  $prefix-for-microsoft: $original-prefix-for-microsoft !global;\n  $prefix-for-opera:     $original-prefix-for-opera     !global;\n  $prefix-for-spec:      $original-prefix-for-spec      !global;\n\n  @if $original-prefix-for-spec {\n    @keyframes #{$name} {\n      @content;\n    }\n  }\n}\n",
		"@mixin linear-gradient($pos, $G1, $G2: null,\n                       $G3: null, $G4: null,\n                       $G5: null, $G6: null,\n                       $G7: null, $G8: null,\n                       $G9: null, $G10: null,\n                       $fallback: null) {\n  // Detect what type of value exists in $pos\n  $pos-type: type-of(nth($pos, 1));\n  $pos-spec: null;\n  $pos-degree: null;\n\n  // If $pos is missing from mixin, reassign vars and add default position\n  @if ($pos-type == color) or (nth($pos, 1) == \"transparent\")  {\n    $G10: $G9; $G9: $G8; $G8: $G7; $G7: $G6; $G6: $G5;\n     $G5: $G4; $G4: $G3; $G3: $G2; $G2: $G1; $G1: $pos;\n     $pos: null;\n  }\n\n  @if $pos {\n    $positions: _linear-positions-parser($pos);\n    $pos-degree: nth($positions, 1);\n    $pos-spec:   nth($positions, 2);\n  }\n\n  $full: $G1, $G2, $G3, $G4, $G5, $G6, $G7, $G8, $G9, $G10;\n\n  // Set $G1 as the default fallback color\n  $fallback-color: nth($G1, 1);\n\n  // If $fallback is a color use that color as the fallback color\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  background-color: $fallback-color;\n  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome\n  background-image: unquote(\"linear-gradient(#{$pos-spec}#{$full})\");\n}\n",
		"@mixin perspective($depth: none) {\n  // none | <length>\n  @include prefixer(perspective, $depth, webkit moz spec);\n}\n\n@mixin perspective-origin($value: 50% 50%) {\n  @include prefixer(perspective-origin, $value, webkit moz spec);\n}\n",
		"// Requires Sass 3.1+\n@mixin radial-gradient($G1,        $G2,\n                       $G3: null, $G4: null,\n                       $G5: null, $G6: null,\n                       $G7: null, $G8: null,\n                       $G9: null, $G10: null,\n                       $pos: null,\n                       $shape-size: null,\n                       $fallback: null) {\n\n  $data: _radial-arg-parser($G1, $G2, $pos, $shape-size);\n  $G1:  nth($data, 1);\n  $G2:  nth($data, 2);\n  $pos: nth($data, 3);\n  $shape-size: nth($data, 4);\n\n  $full: $G1, $G2, $G3, $G4, $G5, $G6, $G7, $G8, $G9, $G10;\n\n  // Strip deprecated cover/contain for spec\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  // Set $G1 as the default fallback color\n  $first-color: nth($full, 1);\n  $fallback-color: nth($first-color, 1);\n\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  // Add Commas and spaces\n  $shape-size: if($shape-size, '#{$shape-size}, ', null);\n  $pos:        if($pos, '#{$pos}, ', null);\n  $pos-spec:   if($pos, 'at #{$pos}', null);\n  $shape-size-spec: if(($shape-size-spec != ' ') and ($pos == null), '#{$shape-size-spec}, ', '#{$shape-size-spec} ');\n\n  background-color:  $fallback-color;\n  background-image: -webkit-radial-gradient(unquote(#{$pos}#{$shape-size}#{$full}));\n  background-image: unquote(\"radial-gradient(#{$shape-size-spec}#{$pos-spec}#{$full})\");\n}\n",
		"@mixin transform($property: none) {\n//  none | <transform-function>\n  @include prefixer(transform, $property, webkit moz ms o spec);\n}\n\n@mixin transform-origin($axes: 50%) {\n// x-axis - left | center | right  | length | %\n// y-axis - top  | center | bottom | length | %\n// z-axis -                          length\n  @include prefixer(transform-origin, $axes, webkit moz ms o spec);\n}\n\n@mixin transform-style ($style: flat) {\n  @include prefixer(transform-style, $style, webkit moz ms o spec);\n}\n",
		"// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.\n// Example: @include transition (all 2s ease-in-out);\n//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);\n//          @include transition-property (transform, opacity);\n\n@mixin transition ($properties...) {\n  // Fix for vendor-prefix transform property\n  $needs-prefixes: false;\n  $webkit: ();\n  $moz: ();\n  $spec: ();\n\n  // Create lists for vendor-prefixed transform\n  @each $list in $properties {\n    @if nth($list, 1) == \"transform\" {\n      $needs-prefixes: true;\n      $list1: -webkit-transform;\n      $list2: -moz-transform;\n      $list3: ();\n\n      @each $var in $list {\n        $list3: join($list3, $var);\n\n        @if $var != \"transform\" {\n          $list1: join($list1, $var);\n          $list2: join($list2, $var);\n        }\n      }\n\n      $webkit: append($webkit, $list1);\n         $moz: append($moz,    $list2);\n        $spec: append($spec,   $list3);\n    }\n\n    // Create lists for non-prefixed transition properties\n    @else {\n      $webkit:  append($webkit, $list, comma);\n      $moz:     append($moz,    $list, comma);\n      $spec:    append($spec,   $list, comma);\n    }\n  }\n\n  @if $needs-prefixes {\n    -webkit-transition: $webkit;\n       -moz-transition: $moz;\n            transition: $spec;\n  }\n  @else {\n    @if length($properties) >= 1 {\n      @include prefixer(transition, $properties, webkit moz spec);\n    }\n\n    @else {\n      $properties: all 0.15s ease-out 0s;\n      @include prefixer(transition, $properties, webkit moz spec);\n    }\n  }\n}\n\n@mixin transition-property ($properties...) {\n   -webkit-transition-property: transition-property-names($properties, 'webkit');\n      -moz-transition-property: transition-property-names($properties, 'moz');\n           transition-property: transition-property-names($properties, false);\n}\n\n@mixin transition-duration ($times...) {\n  @include prefixer(transition-duration, $times, webkit moz spec);\n}\n\n@mixin transition-timing-function ($motions...) {\n// ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()\n  @include prefixer(transition-timing-function, $motions, webkit moz spec);\n}\n\n@mixin transition-delay ($times...) {\n  @include prefixer(transition-delay, $times, webkit moz spec);\n}\n",
		"@mixin user-select($arg: none) {\n  @include prefixer(user-select, $arg, webkit moz ms spec);\n}\n",
		"@mixin placeholder {\n  $placeholders: \":-webkit-input\" \":-moz\" \"-moz\" \"-ms-input\";\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content;\n    }\n  }\n}\n",
		"@mixin button ($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {\n\n  @if type-of($style) == string and type-of($base-color) == color {\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == string and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: #4294f0;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == color {\n    $base-color: $style;\n    $style: simple;\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: $style;\n    $style: simple;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == number {\n    $padding: $base-color;\n    $text-size: $style;\n    $base-color: #4294f0;\n    $style: simple;\n\n    @if $padding == #4294f0 {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n}\n\n\n// Selector Style Button\n//************************************************************************//\n@mixin buttonstyle($type, $b-color, $t-size, $pad) {\n  // Grayscale button\n  @if $type == simple and $b-color == grayscale($b-color) {\n    @include simple($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == shiny and $b-color == grayscale($b-color) {\n    @include shiny($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == pill and $b-color == grayscale($b-color) {\n    @include pill($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == flat and $b-color == grayscale($b-color) {\n    @include flat($b-color, true, $t-size, $pad);\n  }\n\n  // Colored button\n  @if $type == simple {\n    @include simple($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == shiny {\n    @include shiny($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == pill {\n    @include pill($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == flat {\n    @include flat($b-color, false, $t-size, $pad);\n  }\n}\n\n\n// Simple Button\n//************************************************************************//\n@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $saturation:  9%,  $lightness: -14%);\n  $inset-shadow:  adjust-color($base-color, $saturation: -8%,  $lightness:  15%);\n  $stop-gradient: adjust-color($base-color, $saturation:  9%,  $lightness: -11%);\n  $text-shadow:   adjust-color($base-color, $saturation:  15%, $lightness: -18%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border;\n  border-radius: 3px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-decoration: none;\n  text-shadow: 0 1px 0 $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n    $inset-shadow-hover:  adjust-color($base-color, $saturation: -7%, $lightness:  5%);\n    $stop-gradient-hover: adjust-color($base-color, $saturation:  8%, $lightness: -14%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n    }\n\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $border-active:       adjust-color($base-color, $saturation: 9%, $lightness: -14%);\n    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);\n\n    @if $grayscale == true {\n      $border-active:       grayscale($border-active);\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    border: 1px solid $border-active;\n    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;\n  }\n}\n\n\n// Shiny Button\n//************************************************************************//\n@mixin shiny($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $red: -117, $green: -111, $blue: -81);\n  $border-bottom: adjust-color($base-color, $red: -126, $green: -127, $blue: -122);\n  $fourth-stop:   adjust-color($base-color, $red: -79,  $green: -70,  $blue: -46);\n  $inset-shadow:  adjust-color($base-color, $red:  37,  $green:  29,  $blue:  12);\n  $second-stop:   adjust-color($base-color, $red: -56,  $green: -50,  $blue: -33);\n  $text-shadow:   adjust-color($base-color, $red: -140, $green: -141, $blue: -114);\n  $third-stop:    adjust-color($base-color, $red: -86,  $green: -75,  $blue: -48);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $border-bottom: grayscale($border-bottom);\n    $fourth-stop:   grayscale($fourth-stop);\n    $inset-shadow:  grayscale($inset-shadow);\n    $second-stop:   grayscale($second-stop);\n    $text-shadow:   grayscale($text-shadow);\n    $third-stop:    grayscale($third-stop);\n  }\n\n  border: 1px solid $border;\n  border-bottom: 1px solid $border-bottom;\n  border-radius: 5px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  @include linear-gradient(top, $base-color 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n\n  &:hover:not(:disabled) {\n    $first-stop-hover:  adjust-color($base-color, $red: -13, $green: -15, $blue: -18);\n    $second-stop-hover: adjust-color($base-color, $red: -66, $green: -62, $blue: -51);\n    $third-stop-hover:  adjust-color($base-color, $red: -93, $green: -85, $blue: -66);\n    $fourth-stop-hover: adjust-color($base-color, $red: -86, $green: -80, $blue: -63);\n\n    @if $grayscale == true {\n      $first-stop-hover:  grayscale($first-stop-hover);\n      $second-stop-hover: grayscale($second-stop-hover);\n      $third-stop-hover:  grayscale($third-stop-hover);\n      $fourth-stop-hover: grayscale($fourth-stop-hover);\n    }\n\n    cursor: pointer;\n    @include linear-gradient(top, $first-stop-hover  0%,\n                                  $second-stop-hover 50%,\n                                  $third-stop-hover  50%,\n                                  $fourth-stop-hover 100%);\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $inset-shadow-active: adjust-color($base-color, $red: -111, $green: -116, $blue: -122);\n\n    @if $grayscale == true {\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    box-shadow: inset 0 0 20px 0 $inset-shadow-active;\n  }\n}\n\n\n// Pill Button\n//************************************************************************//\n@mixin pill($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border-bottom: adjust-color($base-color, $hue:  8, $saturation: -11%, $lightness: -26%);\n  $border-sides:  adjust-color($base-color, $hue:  4, $saturation: -21%, $lightness: -21%);\n  $border-top:    adjust-color($base-color, $hue: -1, $saturation: -30%, $lightness: -15%);\n  $inset-shadow:  adjust-color($base-color, $hue: -1, $saturation: -1%,  $lightness:  7%);\n  $stop-gradient: adjust-color($base-color, $hue:  8, $saturation:  14%, $lightness: -10%);\n  $text-shadow:   adjust-color($base-color, $hue:  5, $saturation: -19%, $lightness: -15%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border-bottom: grayscale($border-bottom);\n    $border-sides:  grayscale($border-sides);\n    $border-top:    grayscale($border-top);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border-top;\n  border-color: $border-top $border-sides $border-bottom;\n  border-radius: 16px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: normal;\n  line-height: 1;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color,                                $lightness: -4.5%);\n    $border-bottom:       adjust-color($base-color, $hue:  8, $saturation:  13.5%, $lightness: -32%);\n    $border-sides:        adjust-color($base-color, $hue:  4, $saturation: -2%,    $lightness: -27%);\n    $border-top:          adjust-color($base-color, $hue: -1, $saturation: -17%,   $lightness: -21%);\n    $inset-shadow-hover:  adjust-color($base-color,           $saturation: -1%,    $lightness:  3%);\n    $stop-gradient-hover: adjust-color($base-color, $hue:  8, $saturation: -4%,    $lightness: -15.5%);\n    $text-shadow-hover:   adjust-color($base-color, $hue:  5, $saturation: -5%,    $lightness: -22%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $border-bottom:       grayscale($border-bottom);\n      $border-sides:        grayscale($border-sides);\n      $border-top:          grayscale($border-top);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n      $text-shadow-hover:   grayscale($text-shadow-hover);\n    }\n\n    border: 1px solid $border-top;\n    border-color: $border-top $border-sides $border-bottom;\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n    text-shadow: 0 -1px 1px $text-shadow-hover;\n    background-clip: padding-box;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $active-color:         adjust-color($base-color, $hue: 4,  $saturation: -12%,  $lightness: -10%);\n    $border-active:        adjust-color($base-color, $hue: 6,  $saturation: -2.5%, $lightness: -30%);\n    $border-bottom-active: adjust-color($base-color, $hue: 11, $saturation:  6%,   $lightness: -31%);\n    $inset-shadow-active:  adjust-color($base-color, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);\n    $text-shadow-active:   adjust-color($base-color, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);\n\n    @if $grayscale == true {\n      $active-color:         grayscale($active-color);\n      $border-active:        grayscale($border-active);\n      $border-bottom-active: grayscale($border-bottom-active);\n      $inset-shadow-active:  grayscale($inset-shadow-active);\n      $text-shadow-active:   grayscale($text-shadow-active);\n    }\n\n    background: $active-color;\n    border: 1px solid $border-active;\n    border-bottom: 1px solid $border-bottom-active;\n    box-shadow: inset 0 0 6px 3px $inset-shadow-active;\n    text-shadow: 0 -1px 1px $text-shadow-active;\n  }\n}\n\n\n\n// Flat Button\n//************************************************************************//\n@mixin flat($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n  }\n\n  background-color: $base-color;\n  border-radius: 3px;\n  border: none;\n  color: $color;\n  display: inline-block;\n  font-size: inherit;\n  font-weight: bold;\n  padding: 7px 18px;\n  text-decoration: none;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled){\n    $base-color-hover:    adjust-color($base-color, $saturation: 4%, $lightness: 5%);\n\n    @if $grayscale == true {\n      $base-color-hover: grayscale($base-color-hover);\n    }\n\n    background-color: $base-color-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $base-color-active: adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n\n    @if $grayscale == true {\n      $base-color-active: grayscale($base-color-active);\n    }\n\n    background-color: $base-color-active;\n    cursor: pointer;\n  }\n}\n",
		"// Modern micro clearfix provides an easy way to contain floats without adding additional markup.\n//\n// Example usage:\n//\n//    // Contain all floats within .wrapper\n//    .wrapper {\n//      @include clearfix;\n//      .content,\n//      .sidebar {\n//        float : left;\n//      }\n//    }\n\n@mixin clearfix {\n  &:after {\n    content:\"\";\n    display:table;\n    clear:both;\n  }\n}\n\n// Acknowledgements\n// Beat *that* clearfix: [Thierry Koblentz](http://www.css-101.org/articles/clearfix/latest-new-clearfix-so-far.php)\n",
		"// directional-property mixins are shorthands\n// for writing properties like the following\n//\n// @include margin(null 0 10px);\n// ------\n// margin-right: 0;\n// margin-bottom: 10px;\n// margin-left: 0;\n//\n// - or -\n//\n// @include border-style(dotted null);\n// ------\n// border-top-style: dotted;\n// border-bottom-style: dotted;\n//\n// ------\n//\n// Note: You can also use false instead of null\n\n@function collapse-directionals($vals) {\n  $output: null;\n\n  $A: nth( $vals, 1 );\n  $B: if( length($vals) < 2, $A, nth($vals, 2));\n  $C: if( length($vals) < 3, $A, nth($vals, 3));\n  $D: if( length($vals) < 2, $A, nth($vals, if( length($vals) < 4, 2, 4) ));\n\n  @if $A == 0 { $A: 0 }\n  @if $B == 0 { $B: 0 }\n  @if $C == 0 { $C: 0 }\n  @if $D == 0 { $D: 0 }\n\n  @if $A == $B and $A == $C and $A == $D { $output: $A          }\n  @else if $A == $C and $B == $D         { $output: $A $B       }\n  @else if $B == $D                      { $output: $A $B $C    }\n  @else                                  { $output: $A $B $C $D }\n\n  @return $output;\n}\n\n@function contains-falsy($list) {\n  @each $item in $list {\n    @if not $item {\n      @return true;\n    }\n  }\n\n  @return false;\n}\n\n@mixin directional-property($pre, $suf, $vals) {\n  // Property Names\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\n\n  $vals: collapse-directionals($vals);\n\n  @if contains-falsy($vals) {\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\n\n    @if length($vals) == 1 {\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\n    } @else {\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\n    }\n\n    // prop: top/bottom right/left\n    @if length($vals) == 2 {\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n\n    // prop: top right/left bottom\n    } @else if length($vals) == 3 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n\n    // prop: top right bottom left\n    } @else if length($vals) == 4 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\n    }\n\n  // prop: top/right/bottom/left\n  } @else {\n    #{$all}: $vals;\n  }\n}\n\n@mixin margin($vals...) {\n  @include directional-property(margin, false, $vals...);\n}\n\n@mixin padding($vals...) {\n  @include directional-property(padding, false, $vals...);\n}\n\n@mixin border-style($vals...) {\n  @include directional-property(border, style, $vals...);\n}\n\n@mixin border-color($vals...) {\n  @include directional-property(border, color, $vals...);\n}\n\n@mixin border-width($vals...) {\n  @include directional-property(border, width, $vals...);\n}\n",
		"@mixin ellipsis($width: 100%) {\n  display: inline-block;\n  max-width: $width;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n",
		"$georgia: Georgia, Cambria, \"Times New Roman\", Times, serif;\n$helvetica: \"Helvetica Neue\", Helvetica, Roboto, Arial, sans-serif;\n$lucida-grande: \"Lucida Grande\", Tahoma, Verdana, Arial, sans-serif;\n$monospace: \"Bitstream Vera Sans Mono\", Consolas, Courier, monospace;\n$verdana: Verdana, Geneva, sans-serif;\n",
		"@mixin hide-text {\n  overflow: hidden;\n\n  &:before {\n    content: \"\";\n    display: block;\n    width: 0;\n    height: 100%;\n  }\n}\n",
		"//************************************************************************//\n// Generate a variable ($all-text-inputs) with a list of all html5\n// input types that have a text-based input, excluding textarea.\n// http://diveintohtml5.org/forms.html\n//************************************************************************//\n$inputs-list: 'input[type=\"email\"]',\n              'input[type=\"number\"]',\n              'input[type=\"password\"]',\n              'input[type=\"search\"]',\n              'input[type=\"tel\"]',\n              'input[type=\"text\"]',\n              'input[type=\"url\"]',\n\n              // Webkit & Gecko may change the display of these in the future\n              'input[type=\"color\"]',\n              'input[type=\"date\"]',\n              'input[type=\"datetime\"]',\n              'input[type=\"datetime-local\"]',\n              'input[type=\"month\"]',\n              'input[type=\"time\"]',\n              'input[type=\"week\"]';\n\n// Bare inputs\n//************************************************************************//\n$all-text-inputs: assign-inputs($inputs-list);\n\n// Hover Pseudo-class\n//************************************************************************//\n$all-text-inputs-hover: assign-inputs($inputs-list, hover);\n\n// Focus Pseudo-class\n//************************************************************************//\n$all-text-inputs-focus: assign-inputs($inputs-list, focus);\n\n\n\n// You must use interpolation on the variable:\n// #{$all-text-inputs}\n// #{$all-text-inputs-hover}\n// #{$all-text-inputs-focus}\n\n// Example\n//************************************************************************//\n//   #{$all-text-inputs}, textarea {\n//     border: 1px solid red;\n//   }\n\n\n\n//************************************************************************//\n// Generate a variable ($all-button-inputs) with a list of all html5\n// input types that have a button-based input, excluding button.\n//************************************************************************//\n$inputs-button-list: 'input[type=\"button\"]',\n                     'input[type=\"reset\"]',\n                     'input[type=\"submit\"]';\n\n// Bare inputs\n//************************************************************************//\n$all-button-inputs: assign-inputs($inputs-button-list);\n\n// Hover Pseudo-class\n//************************************************************************//\n$all-button-inputs-hover: assign-inputs($inputs-button-list, hover);\n\n// Focus Pseudo-class\n//************************************************************************//\n$all-button-inputs-focus: assign-inputs($inputs-button-list, focus);\n\n// Active Pseudo-class\n//************************************************************************//\n$all-button-inputs-active: assign-inputs($inputs-button-list, active);\n\n\n\n// You must use interpolation on the variable:\n// #{$all-button-inputs}\n// #{$all-button-inputs-hover}\n// #{$all-button-inputs-focus}\n// #{$all-button-inputs-active}\n\n// Example\n//************************************************************************//\n//   #{$all-button-inputs}, button {\n//     border: 1px solid red;\n//   }\n",
		"@mixin position ($position: relative, $coordinates: null null null null) {\n\n  @if type-of($position) == list {\n    $coordinates: $position;\n    $position: relative;\n  }\n\n  $coordinates: unpack($coordinates);\n\n  $top: nth($coordinates, 1);\n  $right: nth($coordinates, 2);\n  $bottom: nth($coordinates, 3);\n  $left: nth($coordinates, 4);\n\n  position: $position;\n\n  @if ($top and $top == auto) or (type-of($top) == number) {\n    top: $top;\n  }\n\n  @if ($right and $right == auto) or (type-of($right) == number) {\n    right: $right;\n  }\n\n  @if ($bottom and $bottom == auto) or (type-of($bottom) == number) {\n    bottom: $bottom;\n  }\n\n  @if ($left and $left == auto) or (type-of($left) == number) {\n    left: $left;\n  }\n}\n",
		"//************************************************************************//\n// Example: @include prefixer(border-radius, $radii, webkit ms spec);\n//************************************************************************//\n// Variables located in /settings/_prefixer.scss\n\n@mixin prefixer ($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    }\n    @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    }\n    @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    }\n    @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    }\n    @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    }\n    @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n",
		"@mixin retina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: false) {\n  @if $asset-pipeline {\n    background-image: image-url(\"#{$filename}.#{$extension}\");\n  }\n  @else {\n    background-image:       url(\"#{$filename}.#{$extension}\");\n  }\n\n  @include hidpi {\n    @if $asset-pipeline {\n      @if $retina-filename {\n        background-image: image-url(\"#{$retina-filename}.#{$extension}\");\n      }\n      @else {\n        background-image: image-url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    }\n\n    @else {\n      @if $retina-filename {\n        background-image: url(\"#{$retina-filename}.#{$extension}\");\n      }\n      @else {\n        background-image: url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    }\n\n    background-size: $background-size;\n\n  }\n}\n",
		"@mixin size($size) {\n  $height: nth($size, 1);\n  $width: $height;\n\n  @if length($size) > 1 {\n    $height: nth($size, 2);\n  }\n\n  @if $height == auto or (type-of($height) == number and not unitless($height)) {\n    height: $height;\n  }\n\n  @if $width == auto or (type-of($height) == number and not unitless($width)) {\n    width: $width;\n  }\n}\n",
		"// CSS cubic-bezier timing functions. Timing functions courtesy of jquery.easie (github.com/jaukia/easie)\n// Timing functions are the same as demo'ed here: http://jqueryui.com/demos/effect/easing.html\n\n// EASE IN\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\n\n// EASE OUT\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\n\n// EASE IN OUT\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\n",
		"@mixin triangle ($size, $color, $direction) {\n  height: 0;\n  width: 0;\n\n  $width: nth($size, 1);\n  $height: nth($size, length($size));\n\n  $foreground-color: nth($color, 1);\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n\n    $width: $width / 2;\n    $height: if(length($size) > 1, $height, $height/2);\n\n    @if $direction == up {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-bottom: $height solid $foreground-color;\n\n    } @else if $direction == right {\n      border-top: $width solid $background-color;\n      border-bottom: $width solid $background-color;\n      border-left: $height solid $foreground-color;\n\n    } @else if $direction == down {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-top: $height solid $foreground-color;\n\n    } @else if $direction == left {\n      border-top: $width solid $background-color;\n      border-bottom: $width solid $background-color;\n      border-right: $height solid $foreground-color;\n    }\n  }\n\n  @else if ($direction == up-right) or ($direction == up-left) {\n    border-top: $height solid $foreground-color;\n\n    @if $direction == up-right {\n      border-left:  $width solid $background-color;\n\n    } @else if $direction == up-left {\n      border-right: $width solid $background-color;\n    }\n  }\n\n  @else if ($direction == down-right) or ($direction == down-left) {\n    border-bottom: $height solid $foreground-color;\n\n    @if $direction == down-right {\n      border-left:  $width solid $background-color;\n\n    } @else if $direction == down-left {\n      border-right: $width solid $background-color;\n    }\n  }\n\n  @else if ($direction == inset-up) {\n    border-width: $height $width;\n    border-style: solid;\n    border-color: $background-color $background-color $foreground-color;\n  }\n\n  @else if ($direction == inset-down) {\n    border-width: $height $width;\n    border-style: solid;\n    border-color: $foreground-color $background-color $background-color;\n  }\n\n  @else if ($direction == inset-right) {\n    border-width: $width $height;\n    border-style: solid;\n    border-color: $background-color $background-color $background-color $foreground-color;\n  }\n\n  @else if ($direction == inset-left) {\n    border-width: $width $height;\n    border-style: solid;\n    border-color: $background-color $foreground-color $background-color $background-color;\n  }\n}\n",
		"@mixin word-wrap($wrap: break-word) {\n  word-wrap: $wrap;\n\n  @if $wrap == break-word {\n    overflow-wrap: break-word;\n    word-break: break-all;\n  }\n}\n",
		"//************************************************************************//\n// These mixins/functions are deprecated\n// They will be removed in the next MAJOR version release\n//************************************************************************//\n@mixin inline-block {\n  display: inline-block;\n  @warn \"inline-block mixin is deprecated and will be removed in the next major version release\";\n}\n",
		"/*! normalize.css v3.0.1 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background:0 0}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 0px}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}",
		"$sm: 48rem;\n$md: 62rem;\n$lg: 75rem;\n\n// REGULAR\n@font-face {\n  font-family: 'Inter-regular';\n  font-style:  normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(\"../fonts/Inter/Inter-Regular.woff2?v=3.12\") format(\"woff2\"),\n       url(\"../fonts/Inter/Inter-Regular.woff?v=3.12\") format(\"woff\");\n}\n\n\n@font-face {\n  font-family: 'Inter-Extrabold';\n  font-style:  normal;\n  font-weight: 800;\n  font-display: swap;\n  src: url(\"../fonts/Inter/Inter-ExtraBold.woff2?v=3.12\") format(\"woff2\"),\n       url(\"../fonts/Inter/Inter-ExtraBold.woff?v=3.12\") format(\"woff\");\n}\n\n@font-face {\n  font-family: 'Inter';\n  font-style:  italic;\n  font-weight: 800;\n  font-display: swap;\n  src: url(\"Inter-ExtraBoldItalic.woff2?v=3.12\") format(\"woff2\"),\n       url(\"Inter-ExtraBoldItalic.woff?v=3.12\") format(\"woff\");\n}\n\n@import url('https://fonts.googleapis.com/css?family=Work+Sans:300,400,500,600&display=swap');\n\np {\n  font-size: 18px;\n  // line-height: 44px;\n  // font-family: 'Work Sans', sans-serif;\n  font-family: 'Inter-regular';\n  font-weight: 400;\n  letter-spacing: .8px;\n}\n\nh4 {\n  font-size: 2.5rem;\n  // font-family: 'Work Sans', sans-serif;\n  // font-weight: 500;\n  // font-style: normal;\n  // font-weight: 700;\n  // font-size: 57px;\n  letter-spacing: -0.29px;\n  font-style: normal;\n  margin: 0px;\n  line-height: 64px;\n  // text-transform: uppercase;\n}\n\nh5 {\n  font-size: 1.4rem;\n  font-family: 'Work Sans', sans-serif;\n  font-weight: 500;\n  font-style: normal;\n  // font-weight: 700;\n  font-style: normal;\n  margin:0px;\n  // text-transform: uppercase;\n}\n\na {\n  color: black;\n  text-decoration: none;\n}\n\nhr {\n  height: 10px;\n  color: black;\n}\n\n.hoverit {\n  transition: all 0.3s;\n}\n.hoverit:hover {\n  transform: translate(0, -5px);\n}\n\n.undeline_hover {\n  transition: all 0.8s ease-in-out;\n}\n.undeline_hover:hover {\n  text-decoration: underline;\n}\n\n\n@media (max-width: 62rem) {\n  h4 {\n    font-size: 1.5rem;\n    line-height: 37px;\n  }\n  h5 {\n    padding-bottom: 20px;\n  }\n}",
		"@import 'bounceOut';\n@import 'fadeIn';\n@import 'bottomUp';\n@import 'none';\n@import 'topDown';\n@import 'bottomDoor';\n@import 'topDoor';\n@import 'leftRight';\n@import 'rightLeft';\n@import 'backgroundIn';\n@import 'textSlide';\n",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"/* 12columns.css | Created by Katherine Kato | Released under the MIT license */\n/* GitHub: https://kathykato.github.io/12columns/ */\n\n$grid-columns: 12;\n\n$sm: 48rem;\n$md: 62rem;\n$lg: 75rem;\n\n.pad_4_top {\n  padding-top: 4rem;\n}\n.pad_1_top {\n  padding-top: 1rem;\n}\n\n.container {\n  margin: auto;\n  padding: 0 1rem;\n  max-width: 71.25rem;\n  width: 100%;\n}\n\n.grid {\n  display: flex;\n  flex-direction: column;\n  flex-flow: row wrap;\n  > [class*=\"column-\"] {\n    display: block;\n  }\n}\n\n.first {\n  order: -1;\n}\n\n.last {\n  order: 12;\n}\n\n.align-top {\n  align-items: start;\n}\n\n.align-center {\n  align-items: center;\n}\n\n.align-bottom {\n  align-items: end;\n}\n\n@for $i from 1 through $grid-columns {\n  .column-xs-#{$i} {\n    flex-basis: $i / $grid-columns * 100%;\n    max-width: $i / $grid-columns * 100%;\n  }\n}\n\n@media (min-width: $sm) {\n  @for $i from 1 through $grid-columns {\n    .column-sm-#{$i} {\n      flex-basis: $i / $grid-columns * 100%;\n      max-width: $i / $grid-columns * 100%;\n    }\n  }\n}\n\n@media (min-width: $md) {\n  @for $i from 1 through $grid-columns {\n    .column-md-#{$i} {\n      flex-basis: $i / $grid-columns * 100%;\n      max-width: $i / $grid-columns * 100%;\n    }\n  }\n}\n\n@media (min-width: $lg) {\n  @for $i from 1 through $grid-columns {\n    .column-lg-#{$i} {\n      flex-basis: $i / $grid-columns * 100%;\n      max-width: $i / $grid-columns * 100%;\n    }\n  }\n}\n\n@supports (display: grid) {\n  .grid {\n    display: grid;\n    grid-template-columns: repeat(12, 1fr);\n    grid-template-rows: auto;\n    > [class*=\"column-\"] {\n      margin: 0;\n      max-width: 100%;\n    }\n  }\n\n  @for $i from 1 through $grid-columns {\n    .column-xs-#{$i} {\n      grid-column-start: span #{$i};\n      grid-column-end: span #{$i};\n    }\n  }\n\n  @media(min-width: $sm) {\n    @for $i from 1 through $grid-columns {\n      .column-sm-#{$i} {\n        grid-column-start: span #{$i};\n        grid-column-end: span #{$i};\n      }\n    }\n  }\n\n  @media(min-width: $md) {\n    @for $i from 1 through $grid-columns {\n      .column-md-#{$i} {\n        grid-column-start: span #{$i};\n        grid-column-end: span #{$i};\n      }\n    }\n  }\n\n  @media(min-width: $lg) {\n    @for $i from 1 through $grid-columns {\n      .column-lg-#{$i} {\n        grid-column-start: span #{$i};\n        grid-column-end: span #{$i};\n      }\n    }\n  }\n}",
		"\n  .animate-reveal {\n    opacity: 0;\n    -webkit-animation: reveal 1s cubic-bezier(0, 1, 0.5, 1) 1 normal forwards;\n       -moz-animation: reveal 1s ease-in 1 normal forwards;\n         -o-animation: reveal 1s cubic-bezier(0, 1, 0.5, 1) 1 normal forwards;\n            animation: reveal 1s cubic-bezier(0, 1, 0.5, 1) 1 normal forwards;\n  }\n  \n  .animate-first {\n    -webkit-animation-delay: 0;\n       -moz-animation-delay: 0;\n         -o-animation-delay: 0;\n            animation-delay: 0;\n  }\n  \n  .animate-second {\n    -webkit-animation-delay: 500ms;\n       -moz-animation-delay: 500ms;\n         -o-animation-delay: 500ms;\n            animation-delay: 500ms;\n  }\n  \n  .animate-third {\n    -webkit-animation-delay: 1s;\n       -moz-animation-delay: 1s;\n         -o-animation-delay: 1s;\n            animation-delay: 1s;\n  }\n  \n  @-webkit-keyframes reveal {\n    0% {\n      opacity: 0;\n      -webkit-transform: translateY(100%);\n         -moz-transform: translateY(100%);\n           -o-transform: translateY(100%);\n              transform: translateY(500%);\n    }\n    100% {\n      opacity: 1;\n      -webkit-transform: translateY(0);\n         -moz-transform: translateY(0);\n           -o-transform: translateY(0);\n              transform: translateY(0);\n    }\n  }\n  \n  @-moz-keyframes reveal {\n    0% {\n      opacity: 0;\n      -webkit-transform: translateY(100%);\n         -moz-transform: translateY(100%);\n           -o-transform: translateY(100%);\n              transform: translateY(100%);\n    }\n    100% {\n      opacity: 1;\n      -webkit-transform: translateY(0);\n         -moz-transform: translateY(0);\n           -o-transform: translateY(0);\n              transform: translateY(0);\n    }\n  }\n  \n  @-o-keyframes reveal {\n    0% {\n      opacity: 0;\n      -webkit-transform: translateY(100%);\n         -moz-transform: translateY(100%);\n           -o-transform: translateY(100%);\n              transform: translateY(100%);\n    }\n    100% {\n      opacity: 1;\n      -webkit-transform: translateY(0);\n         -moz-transform: translateY(0);\n           -o-transform: translateY(0);\n              transform: translateY(0);\n    }\n  }\n  \n  @keyframes reveal {\n    0% {\n      opacity: 0;\n      -webkit-transform: translateY(100%);\n         -moz-transform: translateY(100%);\n           -o-transform: translateY(100%);\n              transform: translateY(100%);\n    }\n    100% {\n      opacity: 1;\n      -webkit-transform: translateY(0);\n         -moz-transform: translateY(0);\n           -o-transform: translateY(0);\n              transform: translateY(0);\n    }\n  }",
		"@import 'base';\n@import 'placeholders';\n",
		"",
		"",
		"@import 'header';\n@import 'footer';\n@import 'about';\n@import 'work';\n@import 'clients';\n@import 'contact';\n@import 'form';\n@import 'form-success';\n@import 'project';\n",
		"$white: \"#fff\";\n$black:\"#2e2e2e\";\n$gray: \"#787878\";\n$highlight: \"#ea8478\";\n$footer: \"#f7f7f7\";\n// $md: 670px;\n$sm: 48rem;\n$md: 62rem;\n$lg: 75rem;\n\n* {\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  &::before, &::after {\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n}\n\n}\nbody {\n  line-height: 1.5;\n  color: black;\n  background: $white;\n  text-rendering: optimizeLegibility;\n  position: relative;\n  // line-height: 1.6;\n  -webkit-font-smoothing: antialiased;\n  -webkit-text-size-adjust: 100%;\n}\n\n\n.tlt {\n  position: absolute;\n}\n.header {\n  height: 100vh;\n  width: 100%;\n  background-color: #FFE000;\n  position: relative;\n  z-index: 1;\n  background-position: top;\n  position: fixed;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n.fake-2 {\n  color: red;\n}\n.container {\n  max-width: 90%;\n}\n\n.navigation {\n  position: relative;\n  height: 10%;\n  padding-top: 2rem;\n}\n\n  \n.nav {\n  // background-color: red\n  #info {\n    text-align: right;\n  }\n}\n   \n\n.intro_text {\n  position: relative;\n  height: 80%;\n  // background-color:red;\n  display: table;\n  .blurb {\n    height: 100%;\n    display: table-cell;\n    vertical-align: middle;\n    h4 {\n      max-width: 55%;\n    }\n  } \n}\n\n\n.work_btn {\n  height: 10%;\n  .arrow {\n    width: 20px;\n    height: 50px;\n    margin-bottom: 20px;\n  }\n}\n\n///////////////////////////////////////////////////////// GALLERY \n\n.gallery {\n  position: relative;\n  top: 100vh;\n  padding: 4rem 0 15rem 0;\n  z-index: 500;\n  background-color: white;\n}\n\n.p_work {\n  position: absolute;\n  margin: 0px;\n}\n\n.img-container {\n  // background-color: gray;\n  margin: 0 0 10px 0;\n  width: 100%;\n  // background-color: white;\n  height: auto;\n  // cursor: pointer;\n  overflow: hidden;\n  &:hover .caption {   \n    opacity: 1;\n    transform: translate(0px, -5px);\n  }\n}\n\n.caption {\n  transition: all 0.3s ease-in-out;\n  transform: translate(0px, 10px);\n  font-size: 18px;\n  margin: 0px;\n  opacity: 0;\n}\n\nimg { \n  // padding: 1em;\n\twidth: 95%;\n  height: 390px;\n  -o-object-fit: cover;\n\tobject-fit: cover;\n  -webkit-transform: scale(1);\n  -ms-transform: scale(1);\n  transform: scale(1);\n  -webkit-transition: all 0.3s ease-in-out;\n  -o-transition: all 0.3s ease-in-out;\n  transition: all 0.3s ease-in-out;\n  &:hover .img-content-hover {\n    transform: scale(1.02);\n  }\n}\n\n\n///////////////////////////////////////////////////////// INFO\n\n.information {\n  display: flex;\n  position: relative;\n  top: 80vh;\n  padding: 4rem 0 44rem 0;\n  z-index: 500;\n  background-color: black;\n  color: white;\n}\n\n.para_container {\n  p{\n    margin:0px;\n  }\n  // padding: 1rem;\n}\n\n.para_title {\n  // padding-top: 1rem;\n  \n\n.category {\n  color: $gray;\n}\n\n.img-content {\n  display: none;\n}\n\n.social, .copyright {\n  margin: 1rem;\n}\n\n.social li {\n  display: inline-block;\n}\n\n.text-container {\n  width: 100%;\n  height: 300px;\n}\n\n// @supports (display: grid) {\n//   .gallery .grid \n//     grid-gap: 1rem\n// }\n\n\n@media (max-width: 62rem) {\n  nav ul {\n    -webkit-box-pack: right;\n    -ms-flex-pack: right;\n    justify-content: right; \n  }\n  .intro_text {\n    position: relative;\n    height: 80%;\n    background-color:red;\n    display: table;\n    .blurb {\n      height: 100%;\n      display: table-cell;\n      vertical-align: top;\n      padding-top:30%;\n    } \n  }\n}\n\n@media screen and (max-width: 1024px) {\n  .img-container {\n    height: 100%;\n    // &:hover .img-content-hover \n    //   display: none\n  }\n  .img-content {\n    display: block;\n    padding: 1rem 0;\n  }\n}\n}\n\n",
		"",
		".icaption_red {\n    background-color: red;\n    border: 2px solid red;\n}",
		"",
		"",
		"",
		"",
		"",
		".full_screen_pop {\n    background-color: white;\n    opacity: .9;\n    width: 100%;\n    height: 100vh;\n    position: fixed;\n    z-index: 9000;\n    top: 0;\n    left: 0;\n}"
	],
	"names": [],
	"mappings": "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"
}